{
  "name": "Googleapis",
  "tagline": "Contains the interface definitions for a small (but growing) set of Google APIs",
  "body": "# Google APIs\r\n\r\nThis repository contains the original interface definitions for a\r\nsmall (but growing) set of Google APIs built on a next-generation API\r\nserving stack. Reading the original interface definitions can provide\r\na better understanding of these APIs and help you to utilize them more\r\nefficiently. You can also use these interface definitions with open\r\nsource tools to generate client libraries or other artifacts such as\r\ndocumentation.\r\n\r\nFor more details on all Google APIs and developer tools, see the [Google\r\nDevelopers](https://developers.google.com/products/) site.\r\n\r\n## Overview\r\n\r\nGoogle APIs are typically deployed as API services that are hosted\r\nunder different DNS names. One API service may implement multiple APIs\r\nand multiple versions of the same API, and each API contains a\r\ncollection of API methods.\r\n\r\nBy default, Google APIs use [Protocol\r\nBuffers](https://github.com/google/protobuf) language version 3 - aka\r\nproto3 - as their Interface Definition Language (IDL) to define the\r\nAPI interface and the structure of the payload messages. The same\r\ninterface definition is used for both REST and RPC versions of the\r\nAPI, which can be accessed over different wire protocols.\r\n\r\nThere are two ways of accessing Google APIs:\r\n\r\n1.  JSON over HTTP/1.1: You can access Google APIs directly using JSON\r\nover HTTP/1.1, using Google-provided API or third-party API client\r\nlibraries.\r\n\r\n2.  Protocol Buffers over gRPC: You can access Google APIs published\r\nin this repository through [GRPC](https://github.com/grpc), which is\r\na high-performance binary RPC protocol over HTTP/2. It offers many\r\nuseful features, including request/response multiplex and full-duplex\r\nstreaming.\r\n\r\n## Discussions\r\n\r\nYou may use the [Google APIs](https://groups.google.com/group/googleapis)\r\nmailing list for general discussions about this repository.\r\n\r\n## Repository Structure\r\n\r\nThis repository uses a directory hierarchy that reflects the Google\r\nAPI product structure. In general, every API has its own root\r\ndirectory, and each major version of the API has its own subdirectory.\r\nThe proto package names exactly match the directory: this makes it\r\neasy to locate the proto definitions and ensures that the generated\r\nclient libraries have idiomatic namespaces in most programming\r\nlanguages. Alongside the API directories live the configuration files\r\nfor the [GAPIC toolkit](https://github.com/googleapis/toolkit).\r\n\r\n**NOTE:** the major version of an API is used to indicate breaking\r\nchange to the API.\r\n\r\n## Generate gRPC Source Code\r\n\r\nTo generate gRPC source code for Google APIs in this repository, you\r\nfirst need to install both Protocol Buffers and gRPC on your local\r\nmachine. Then you can run `make all` in this directory to generate\r\nthe code.\r\n\r\n### Go gRPC Source Code\r\nIt is difficult to generate Go gRPC source code from this repository,\r\nsince Go has different directory structure.\r\nPlease use [this repository](https://github.com/google/go-genproto) instead.\r\n\r\n**NOTE:** The Makefile needs more improvements.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}